function [fitresult, gof] = createFit_atenuation_axial_RSWE(y_v2, R_cc2, I_cc2,limit1,limit2)
%CREATEFITS(Y_V2,R_CC2,I_CC2)
%  Create fits.
%
%  Data for 'untitled fit 1' fit:
%      X Input : y_v2
%      Y Output: R_cc2
%  Data for 'untitled fit 2' fit:
%      X Input : y_v2
%      Y Output: I_cc2
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 11-Jun-2019 11:40:45

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
if limit2<limit1
    limit2=0.0015;
end
[xData, yData] = prepareCurveData( y_v2, R_cc2 );
% Set up fittype and options.
ft = fittype( '3*(((sin(k*x)./((k*x).^2))-cos(k*x)./(k*x))./(k*x))', 'independent', 'x', 'dependent', 'y' );
% excludedPoints = ( yData>=1);
excludedPoints = (xData < limit1) | (xData > limit2) | (yData >= 1);
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% opts.Display = 'Off';
opts.Lower = 200;
opts.StartPoint = 0.8002804688888;
opts.Exclude = excludedPoints;
% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );
% figure,plot( fitresult, xData, yData );
% % Set up fittype and options.
% ft = fittype( 'real(2*pi^2*((8*a+4i*b*x)*cosh(2*a+1i*b*x)-4*sinh(2*a+1i*b*x))/(2*a+1i*x*b)^3)/abs(2*pi^2*((8*a+4i*1*0)*cosh(2*a+1i*1*0)-4*sinh(2*a+1i*1*0))/(2*a+1i*0*1)^3)', 'independent', 'x', 'dependent', 'y' );
% excludedPoints = ((xData <= -0.002) | (xData > 0.002)| yData>=1);
% opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% opts.Display = 'Off';
% opts.Lower = [-Inf 0];
% opts.Lower = [-Inf 100];
% opts.StartPoint = [0.1 600];
% opts.Exclude = excludedPoints;
% opts.Upper = [Inf 3e6];
% % Fit model to data.
% try
% [fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );
% % gof(1)
% catch es
% fprintf('Error NAN 1 \n');
% fitresult{1}.b=500;
% gof(1)=struct( 'sse', NaN, ...
%     'rsquare', NaN, 'dfe', NaN, 'adjrsquare', NaN, 'rmse', NaN );
end

% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult{1}, xData, yData );
% legend( h, 'R_cc2 vs. y_v2', 'untitled fit 1', 'Location', 'NorthEast' );
% % Label axes
% xlabel m
% ylabel real_cc
% grid on
%     str = {'Fitting parameters:',['a*z = ',num2str(fitresult{1}.a)],['k = ',num2str(fitresult{1}.b)]};
%     text(-0.027,0.7,str,'FontSize',14)
%     axis([-40e-3 40e-3 -0.8 1])
% %     saveas(gcf,['corr_ax_real_fit_',num2str(f),'Hz.png'])
% %     saveas(gcf,['corr_ax_real_fit_',num2str(f),'Hz.fig'])
% %% Fit: 'untitled fit 2'.
% [xData, yData] = prepareCurveData( y_v2, I_cc2 );
% 
% % Set up fittype and options.
% ft = fittype( 'imag(2*pi^2*((8*a+4i*b*x)*cosh(2*a+1i*b*x)-4*sinh(2*a+1i*b*x))/(2*a+1i*x*b)^3)/abs(2*pi^2*((8*a+4i*1*0)*cosh(2*a+1i*1*0)-4*sinh(2*a+1i*1*0))/(2*a+1i*0*1)^3)', 'independent', 'x', 'dependent', 'y' );
% opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
% opts.Display = 'Off';
% opts.Lower = [-Inf 0];
% opts.StartPoint = [0.1 600];
% opts.Upper = [Inf 5e5];
% 
% % Fit model to data.
% try
% [fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );
% catch es
% fprintf('Error NAN 2 \n')
% fitresult{2}=500;
% gof(2)=struct( 'sse', NaN, ...
%     'rsquare', NaN, 'dfe', NaN, 'adjrsquare', NaN, 'rmse', NaN);
% end
% % % Plot fit with data.
% % figure( 'Name', 'untitled fit 2' );
% % h = plot( fitresult{2}, xData, yData );
% % legend( h, 'I_cc2 vs. y_v2', 'untitled fit 2', 'Location', 'NorthEast' );
% % % Label axes
% % xlabel m
% % ylabel I_cc2
% % grid on
% %     str = {'Fitting parameters:',['a*z = ',num2str(fitresult{2}.a)],['k = ',num2str(fitresult{2}.b)]};
% %     text(-0.027,0.7,str,'FontSize',14)
% %     axis([-40e-3 40e-3 -0.8 1])
% % %     saveas(gcf,['corr_ax_img_fit_',num2str(f),'Hz.png'])
% % %     saveas(gcf,['corr_ax_img_fit_',num2str(f),'Hz.fig'])
% % 
